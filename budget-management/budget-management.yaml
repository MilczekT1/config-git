logging.level.org.springframework.web.filter.CommonsRequestLoggingFilter: DEBUG
management:
  endpoint:
    metrics.enabled: true
    prometheus.enabled: true
  endpoints.web.exposure.include: "*"
  metrics.export.prometheus.enabled: true
budget:
  chassis:
    http-logging:
      enabled: true
      includeQueryString: true
      includePayload: true
      includeHeaders: false
      maxPayloadLength: 10000
spring:
  config:
    activate:
      on-profile: default
  data:
    mongodb:
      database: budget-management
      uri: '{cipher}2ef5ba8ffb9a6f08b1cf3a38b92816cb6959c7d2a3776729b73e8a23bc2f440893172048fc8bfe8856d706bce06e6a87944905bad9203dc3537e1854fd079096ec9362a6326005e73b6f4dad6d4090eb9a2bc4fcf29ce11dbeb9ec58aa4167e74e2ee6d2c9ccc7cb4ac3a6c0469ca890'
  cloud:
    config:
      allowOverride: true
      overrideNone: true
      overrideSystemProperties: false
  security:
    user:
      name: '{cipher}99bcb43e165747f915eeffc7931ca55af9081f1314d5687bd5d994c99c76173c'
      password: '{cipher}38130b35a4ab1fb31c45494c8e07ecdabc66aa5b9549f9233bc29bd1bcd35bfa'
  sleuth:
    sampler:
      probability: 1
  zipkin:
    base-url: http://zipkin:9411/
    enabled: true
    discoveryClientEnabled: false
health:
  config:
    enabled: false
    time-to-live: 3600000
