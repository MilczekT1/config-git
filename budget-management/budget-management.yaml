logging.level.org.springframework.web.filter.CommonsRequestLoggingFilter: DEBUG
management:
  endpoint:
    metrics.enabled: true
    prometheus.enabled: true
  endpoints.web.exposure.include: "*"
  metrics.export.prometheus.enabled: true
budget:
  chassis:
    http-logging:
      enabled: true
      includeQueryString: true
      includePayload: true
      includeHeaders: false
      maxPayloadLength: 10000
spring:
  profiles: default
  data:
    mongodb:
      database: budget-management
      uri: '{cipher}b9cdce98e68285009d6968cc0f6eec059bb176b585cf9a632ab40643d3d7350d1abc9acffe81fec67556d66291b4ccb5b44468f3b29fb40644b2d9973070f26e028088859c09723e1950aa777adb75f25dcb509e0d06b5c13872e5b57cdbf435cd83dead769ff094469917b49feb6170'
  cloud:
    config:
      allowOverride: true
      overrideNone: true
      overrideSystemProperties: false
  security:
    user:
      name: '{cipher}99bcb43e165747f915eeffc7931ca55af9081f1314d5687bd5d994c99c76173c'
      password: '{cipher}38130b35a4ab1fb31c45494c8e07ecdabc66aa5b9549f9233bc29bd1bcd35bfa'
  sleuth:
    sampler:
      probability: 1
  zipkin:
    base-url: http://zipkin:9411/
    enabled: true
    discoveryClientEnabled: false
health:
  config:
    enabled: false
    time-to-live: 3600000
---
spring:
  profiles: test
  profiles.include: default
